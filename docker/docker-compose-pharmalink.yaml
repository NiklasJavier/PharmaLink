version: '3.7'

services:
  pharmalink:
    #image: ghcr.io/niklasjavier/pharmalink:latest
    build:
      context: ./../.
      dockerfile: Dockerfile
    container_name: app-pharmalink
    hostname: app-pharmalink
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      system.benutzername: "admin"
      system.passwort: "admin123"
    ports:
      - "8080:8080"
    volumes:
      - ../fabric-samples/test-network/organizations:/fabric-crypto/organizations:ro
      - ./pharmalink/application.yaml:/etc/pharmalink/application.yaml:ro
    networks:
      - pharmalink-net
    restart: unless-stopped
    depends_on:
      - mongodb
      - ipfs

  pharmalink-ui:
    #image: ghcr.io/niklasjavier/pharmalink-ui:latest
    build:
      context: ./../frontend/.
      dockerfile: Dockerfile
    container_name: app-pharmalink-ui
    ports:
      - "3000:8083"
    volumes:
      - ./pharmalink-ui:/app/config:ro
    environment:
      - BACKEND_BASEURL=http://app-pharmalink:8080/api
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    networks:
      - pharmalink-net
    depends_on:
      - pharmalink

  ipfs:
    image: ipfs/go-ipfs:latest
    container_name: app-ipfs_node
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: always
    volumes:
      - ./pharmalink/ipfs/ipfs_data:/data/ipfs
      - ./pharmalink/ipfs/staging:/export
    ports:
      - "4001:4001/tcp"
      - "4001:4001/udp"
      - "5001:5001"
      - "8081:8080"
    networks:
      - pharmalink-net

  mongodb:
    image: mongo:latest
    container_name: app-mongo
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: user
      MONGO_INITDB_DATABASE: pharmalinkdb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - pharmalink-net

networks:
  pharmalink-net:
    driver: bridge

volumes:
  mongo-data: